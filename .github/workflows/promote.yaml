name: flux-promotion
on:
  repository_dispatch:
    types:
      - HelmRelease/*

permissions:
  contents: write
  pull-requests: write

jobs:
  promote:
    runs-on: ubuntu-latest
    # Start promotion when the staging cluster has successfully
    # upgraded the Helm release to a new chart version.
    if: |
      github.event.client_payload.metadata.env == 'staging' &&
      github.event.client_payload.severity == 'info'
    steps:
      - name: print
        run: echo "${{ github.event.client_payload }}"
      # # Checkout main branch.
      # - uses: actions/checkout@v3
      #   with:
      #     ref: main
      # # Parse the event metadata to determine the chart version deployed on staging.
      # - name: Get chart version from staging
      #   id: staging
      #   run: |
      #     echo "${{ github.event.client_payload }}"
      #     VERSION=$(echo ${{ github.event.client_payload.metadata.revision }} | cut -d '@' -f1)
      #     echo VERSION=${VERSION} >> $GITHUB_OUTPUT
      # # Patch the chart version in the production Helm release manifest.
      # - name: Set chart version in production
      #   id: production
      #   env:
      #     CHART_VERSION: ${{ steps.staging.outputs.version }}
      #   run: |
      #     echo "set chart version to ${CHART_VERSION}"
      #     yq eval '.spec.chart.spec.version=env(CHART_VERSION)' -i ./clusters/production/apps/demo.yaml
      # # Open a Pull Request if an upgraded is needed in production.
      # - name: Open promotion PR
      #   uses: peter-evans/create-pull-request@v4
      #   with:
      #     branch: demo-promotion
      #     delete-branch: true
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     commit-message: Update demo to v${{ steps.staging.outputs.version }}
      #     title: Promote demo release to v${{ steps.staging.outputs.version }}
      #     body: |
      #       Promote demo release on production to v${{ steps.staging.outputs.version }}
